import{j as r}from"./jsx-runtime-D_zvdyIk.js";import{r as h,g as M}from"./index-BCtMShv3.js";const N=[7575,7602.5,7613,7627,7607,7606.5,7608.5,7602.5,7595,7560.5,7588.5,7591.5,7600,7590,7570.5,7573.5,7571.5,7570,7554,7566,7578,7583,7604,7617.5,7623.5,7641,7639.5,7649.5,7621.5,7635.5,7616.5,7603.5,7606,7635.5,7651.5,7670.5,7686.5,7688,7700,7746.5,7810.5,7763,7760],E=({coords:s,...n})=>{const a=s.reduce((l,{x:o,y:e})=>l.concat(`${o} ${e},`),"");return r.jsx("polyline",{fill:"none",points:a,...n})};E.__docgenInfo={description:"",methods:[],displayName:"Line",props:{coords:{required:!0,tsType:{name:"Array",elements:[{name:"LittleChartsCoords"}],raw:"Array<LittleChartsCoords>"},description:""}},composes:["SVGProps"]};const F=h.createContext({verticalIndents:0,horizontalIndents:0}),b=()=>h.useContext(F),D=({coords:s,...n})=>{const{verticalIndents:a}=b();let l=0,o=0,e=0;const t=s.reduce((d,{x:p,y:m})=>(l=Math.max(l,p),o=Math.min(o,p),e=Math.max(e,m),`${d} ${p},${m}`),""),i=`${o} ,${e+a} ${t} ${l},${e+a}`;return r.jsx("polygon",{points:i,...n})};D.__docgenInfo={description:"",methods:[],displayName:"Polygon",props:{coords:{required:!0,tsType:{name:"Array",elements:[{name:"LittleChartsCoords"}],raw:"Array<LittleChartsCoords>"},description:""}},composes:["SVGProps"]};const q=({data:s,width:n,height:a,verticalIndents:l,horizontalIndents:o})=>{const{length:e}=s,t=Math.max(...s),i=Math.min(...s),d=2,p=t-i,m=p===0?d:p,_=(a-l*d)/m,w=(n-o*d)/(e>1?e-1:1);return s.map((B,G)=>({x:G*w+o,y:(t-B)*_+l}))};var g={exports:{}};/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/var C;function V(){return C||(C=1,function(s){(function(){var n={}.hasOwnProperty;function a(){for(var e="",t=0;t<arguments.length;t++){var i=arguments[t];i&&(e=o(e,l(i)))}return e}function l(e){if(typeof e=="string"||typeof e=="number")return e;if(typeof e!="object")return"";if(Array.isArray(e))return a.apply(null,e);if(e.toString!==Object.prototype.toString&&!e.toString.toString().includes("[native code]"))return e.toString();var t="";for(var i in e)n.call(e,i)&&e[i]&&(t=o(t,i));return t}function o(e,t){return t?e?e+" "+t:e+t:e}s.exports?(a.default=a,s.exports=a):window.classNames=a})()}(g)),g.exports}var W=V();const O=M(W),c=({className:s,id:n,data:a,children:l,width:o,height:e,margins:[t,i]=[0,0]})=>{const d=h.useMemo(()=>({verticalIndents:t,horizontalIndents:i}),[t,i]),p=h.useMemo(()=>q({data:a,width:o,height:e,verticalIndents:t,horizontalIndents:i}),[a,o,e,t,i]);return r.jsx(F.Provider,{value:d,children:r.jsx("svg",{id:n,xmlns:"http://www.w3.org/2000/svg",viewBox:`0 0 ${o} ${e}`,className:O(s),height:e,width:o,children:l(p)})})};c.Line=E;c.Polygon=D;c.__docgenInfo={description:"Base chart component",methods:[{name:"Line",docblock:null,modifiers:["static"],params:[{name:"{ coords, ...other }",optional:!1,type:null}],returns:null},{name:"Polygon",docblock:null,modifiers:["static"],params:[{name:"{ coords, ...other }",optional:!1,type:null}],returns:null}],displayName:"LittleCharts",props:{margins:{defaultValue:{value:"[0, 0]",computed:!1},required:!1}}};const X={title:"LittleChart",component:c,args:{data:N,width:400,height:150,margins:[20,2],children:s=>r.jsx(c.Line,{coords:s,stroke:"#0B61A4",strokeWidth:2,fill:"none"})}},u={},f={render:s=>r.jsx(c,{...s,children:n=>r.jsxs("g",{children:[r.jsx(c.Polygon,{fill:"#3F92D2",coords:n}),r.jsx(c.Line,{coords:n,strokeWidth:2,stroke:"#033E6B"})]})})},x={render:s=>r.jsx(c,{...s,children:n=>r.jsxs("g",{children:[r.jsx("defs",{children:r.jsxs("linearGradient",{id:"gradient",x1:"0%",y1:"0%",x2:"0%",y2:"100%",children:[r.jsx("stop",{offset:"0%",stopColor:"#66A3D2"}),r.jsx("stop",{offset:"50%",stopColor:"#3F92D2"}),r.jsx("stop",{offset:"100%",stopColor:"#fff"})]})}),r.jsx(c.Polygon,{fill:"url(#gradient)",coords:n}),r.jsx(c.Line,{strokeWidth:2,stroke:"#033E6B",coords:n})]})})};var y,L,j;u.parameters={...u.parameters,docs:{...(y=u.parameters)==null?void 0:y.docs,source:{originalSource:"{}",...(j=(L=u.parameters)==null?void 0:L.docs)==null?void 0:j.source}}};var P,$,v;f.parameters={...f.parameters,docs:{...(P=f.parameters)==null?void 0:P.docs,source:{originalSource:`{
  render: props => <LittleCharts {...props}>
      {coords => <g>
          <LittleCharts.Polygon fill="#3F92D2" coords={coords} />
          <LittleCharts.Line coords={coords} strokeWidth={2} stroke="#033E6B" />
        </g>}
    </LittleCharts>
}`,...(v=($=f.parameters)==null?void 0:$.docs)==null?void 0:v.source}}};var k,S,A;x.parameters={...x.parameters,docs:{...(k=x.parameters)==null?void 0:k.docs,source:{originalSource:`{
  render: props => <LittleCharts {...props}>
      {coords => <g>
          <defs>
            <linearGradient id="gradient" x1="0%" y1="0%" x2="0%" y2="100%">
              <stop offset="0%" stopColor="#66A3D2" />
              <stop offset="50%" stopColor="#3F92D2" />
              <stop offset="100%" stopColor="#fff" />
            </linearGradient>
          </defs>
          <LittleCharts.Polygon fill={\`url(#gradient)\`} coords={coords} />
          <LittleCharts.Line strokeWidth={2} stroke="#033E6B" coords={coords} />
        </g>}
    </LittleCharts>
}`,...(A=(S=x.parameters)==null?void 0:S.docs)==null?void 0:A.source}}};const Y=["Line","LineFilling","LineGradient"];export{u as Line,f as LineFilling,x as LineGradient,Y as __namedExportsOrder,X as default};
